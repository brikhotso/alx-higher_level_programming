"""
Test cases for the `101-lazy_matrix_mul` module.

Using `lazy_matrix_mul` function
==============================

Importing function from the module:
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

# Test cases for valid input scenarios

Regular matrices:
>>> matrix_a = [[1, 2, 3], [4, 5, 6]]
>>> matrix_b = [[7, 8], [9, 10], [11, 12]]
>>> lazy_matrix_mul(matrix_a, matrix_b)
array([[ 58,  64],
       [139, 154]])

# Test cases for invalid input scenarios

Non-numeric input in matrices:
>>> matrix_c = [[1, 'a'], [3, 4]]
>>> lazy_matrix_mul(matrix_c, matrix_b)
Traceback (most recent call last):
    ...
ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

Matrices with different row sizes:
>>> matrix_d = [[1, 2, 3], [4, 5, 6], [7, 8]]
>>> lazy_matrix_mul(matrix_d, matrix_b)
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence.

Matrices with incompatible sizes for multiplication:
>>> matrix_e = [[1, 2, 3], [4, 5, 6]]
>>> matrix_f = [[1, 2, 3], [4, 5, 6]]
>>> lazy_matrix_mul(matrix_e, matrix_f)
Traceback (most recent call last):
    ...
ValueError: shapes (2,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)

Missing two arguments
>>> lazy_matrix_mul()
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Missing one argument
>>> lazy_matrix_mul(matrix_a)
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

"""
